/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MockTokenVesting,
  MockTokenVestingInterface,
} from "../../token-vesting.sol/MockTokenVesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Revoked",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "computeNextVestingScheduleIdForHolder",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vestingScheduleId",
        type: "bytes32",
      },
    ],
    name: "computeReleasableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "computeVestingScheduleIdForAddressAndIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cliff",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_slicePeriodSeconds",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_revocable",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "createVestingSchedule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "getLastVestingScheduleForHolder",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "address",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cliff",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slicePeriodSeconds",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amountTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "released",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
        ],
        internalType: "struct TokenVesting.VestingSchedule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getVestingIdAtIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vestingScheduleId",
        type: "bytes32",
      },
    ],
    name: "getVestingSchedule",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "address",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cliff",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slicePeriodSeconds",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amountTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "released",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
        ],
        internalType: "struct TokenVesting.VestingSchedule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getVestingScheduleByAddressAndIndex",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "address",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cliff",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slicePeriodSeconds",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amountTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "released",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
        ],
        internalType: "struct TokenVesting.VestingSchedule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVestingSchedulesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "getVestingSchedulesCountByBeneficiary",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVestingSchedulesTotalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWithdrawableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vestingScheduleId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vestingScheduleId",
        type: "bytes32",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
    ],
    name: "setCurrentTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405260006006553480156200001657600080fd5b5060405162001ed038038062001ed08339810160408190526200003991620000c0565b80620000453362000070565b600180556001600160a01b0381166200005d57600080fd5b6001600160a01b031660805250620000f2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000d357600080fd5b81516001600160a01b0381168114620000eb57600080fd5b9392505050565b608051611da66200012a600039600081816101a7015281816104d301528181610adf01528181610d760152610f3d0152611da66000f3fe60806040526004361061014b5760003560e01c80638af104da116100b4578063ea1bb3d51161006e578063f51321d711610056578063f51321d7146103e1578063f7c469f014610401578063f9079b371461047657005b8063ea1bb3d5146103a1578063f2fde38b146103c157005b806390be10cc1161009c57806390be10cc1461034c5780639ef346b414610361578063b75c7dc61461038157005b80638af104da146102cc5780638da5cb5b1461032e57005b806348deb4711161010557806366afd8ef116100ed57806366afd8ef1461026a578063715018a61461028a5780637e913dc61461029f57005b806348deb4711461021f5780635a7bb69a1461023457005b806321df0da71161013357806321df0da71461019857806322f8e566146101df5780632e1a7d4d146101ff57005b8063130836171461015457806317e289e91461017857005b3661015257005b005b34801561016057600080fd5b506002545b6040519081526020015b60405180910390f35b34801561018457600080fd5b50610152610193366004611aad565b610496565b3480156101a457600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b03909116815260200161016f565b3480156101eb57600080fd5b506101526101fa366004611b14565b600655565b34801561020b57600080fd5b5061015261021a366004611b14565b6109d9565b34801561022b57600080fd5b50600454610165565b34801561024057600080fd5b5061016561024f366004611b2d565b6001600160a01b031660009081526005602052604090205490565b34801561027657600080fd5b50610152610285366004611b48565b610b12565b34801561029657600080fd5b50610152610db0565b3480156102ab57600080fd5b506102bf6102ba366004611b2d565b610dc4565b60405161016f9190611b6a565b3480156102d857600080fd5b506101656102e7366004611bf5565b6040516bffffffffffffffffffffffff19606084901b1660208201526034810182905260009060540160405160208183030381529060405280519060200120905092915050565b34801561033a57600080fd5b506000546001600160a01b03166101c7565b34801561035857600080fd5b50610165610ef9565b34801561036d57600080fd5b506102bf61037c366004611b14565b610fb3565b34801561038d57600080fd5b5061015261039c366004611b14565b6110b7565b3480156103ad57600080fd5b506101656103bc366004611b14565b611275565b3480156103cd57600080fd5b506101526103dc366004611b2d565b61135e565b3480156103ed57600080fd5b506102bf6103fc366004611bf5565b6113eb565b34801561040d57600080fd5b5061016561041c366004611b2d565b6001600160a01b0381166000908152600560209081526040808320548151606086901b6bffffffffffffffffffffffff19168185015260348082019290925282518082039092018252605401909152805191012092915050565b34801561048257600080fd5b50610165610491366004611b14565b611499565b61049e61153d565b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152306004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561051f57600080fd5b505af1158015610533573d6000803e3d6000fd5b5050505080306001600160a01b03166390be10cc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610576573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059a9190611c1f565b10156106395760405162461bcd60e51b815260206004820152604a60248201527f546f6b656e56657374696e673a2063616e6e6f7420637265617465207665737460448201527f696e67207363686564756c652062656361757365206e6f74207375666669636960648201527f656e7420746f6b656e7300000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b600084116106af5760405162461bcd60e51b815260206004820152602260248201527f546f6b656e56657374696e673a206475726174696f6e206d757374206265203e60448201527f20300000000000000000000000000000000000000000000000000000000000006064820152608401610630565b600081116106ff5760405162461bcd60e51b815260206004820181905260248201527f546f6b656e56657374696e673a20616d6f756e74206d757374206265203e20306044820152606401610630565b60018310156107765760405162461bcd60e51b815260206004820152602d60248201527f546f6b656e56657374696e673a20736c696365506572696f645365636f6e647360448201527f206d757374206265203e3d2031000000000000000000000000000000000000006064820152608401610630565b6040517ff7c469f00000000000000000000000000000000000000000000000000000000081526001600160a01b0388166004820152600090309063f7c469f090602401602060405180830381865afa1580156107d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fa9190611c1f565b905060006108088888611597565b90506040518061014001604052806001151581526020018a6001600160a01b03168152602001828152602001898152602001878152602001868152602001851515815260200184815260200160008152602001600015158152506003600084815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010155606082015181600201556080820151816003015560a0820151816004015560c08201518160050160006101000a81548160ff02191690831515021790555060e0820151816006015561010082015181600701556101208201518160080160006101000a81548160ff0219169083151502179055509050506109588360045461159790919063ffffffff16565b6004556002805460018181019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace018390556001600160a01b038a16600090815260056020526040902054906109b1908290611597565b6001600160a01b03909a16600090815260056020526040902099909955505050505050505050565b6109e16115a3565b6109e961153d565b80306001600160a01b03166390be10cc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4c9190611c1f565b1015610ac05760405162461bcd60e51b815260206004820152602b60248201527f546f6b656e56657374696e673a206e6f7420656e6f756768207769746864726160448201527f7761626c652066756e64730000000000000000000000000000000000000000006064820152608401610630565b610b06610ad56000546001600160a01b031690565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690836115fd565b610b0f60018055565b50565b610b1a6115a3565b600082815260036020526040902054829060ff161515600114610b3c57600080fd5b60008181526003602052604090206008015460ff1615610b5b57600080fd5b6000838152600360205260408120805491549091336001600160a01b03610100909204821681149291909116148180610b915750805b610c295760405162461bcd60e51b815260206004820152604260248201527f546f6b656e56657374696e673a206f6e6c792062656e6566696369617279206160448201527f6e64206f776e65722063616e2072656c656173652076657374656420746f6b6560648201527f6e73000000000000000000000000000000000000000000000000000000000000608482015260a401610630565b6040805161014081018252845460ff808216151583526001600160a01b03610100928390041660208401526001870154938301939093526002860154606083015260038601546080830152600486015460a083015260058601548316151560c0830152600686015460e083015260078601549082015260088501549091161515610120820152600090610cbb90611682565b905085811015610d335760405162461bcd60e51b815260206004820152603d60248201527f546f6b656e56657374696e673a2063616e6e6f742072656c6561736520746f6b60448201527f656e732c206e6f7420656e6f7567682076657374656420746f6b656e730000006064820152608401610630565b6007840154610d429087611597565b600785015583546004546101009091046001600160a01b031690610d66908861176e565b600455610d9d6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001682896115fd565b505050505050610dac60018055565b5050565b610db861153d565b610dc2600061177a565b565b610e2960405180610140016040528060001515815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081526020016000151581525090565b6001600160a01b03821660009081526005602052604081205460039190610e589085906102e790600190611c4e565b81526020808201929092526040908101600020815161014081018352815460ff808216151583526001600160a01b036101009283900416958301959095526001830154938201939093526002820154606082015260038201546080820152600482015460a082015260058201548416151560c0820152600682015460e082015260078201549281019290925260080154909116151561012082015292915050565b600480546040517f70a082310000000000000000000000000000000000000000000000000000000081523092810192909252600091610fae91906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610f84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa89190611c1f565b9061176e565b905090565b61101860405180610140016040528060001515815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081526020016000151581525090565b50600090815260036020818152604092839020835161014081018552815460ff808216151583526001600160a01b0361010092839004169483019490945260018301549582019590955260028201546060820152928101546080840152600481015460a084015260058101548216151560c0840152600681015460e0840152600781015493830193909352600890920154909116151561012082015290565b6110bf61153d565b600081815260036020526040902054819060ff1615156001146110e157600080fd5b60008181526003602052604090206008015460ff161561110057600080fd5b6000828152600360205260409020600581015460ff16151560011461118d5760405162461bcd60e51b815260206004820152602660248201527f546f6b656e56657374696e673a2076657374696e67206973206e6f742072657660448201527f6f6361626c6500000000000000000000000000000000000000000000000000006064820152608401610630565b6040805161014081018252825460ff808216151583526001600160a01b03610100928390041660208401526001850154938301939093526002840154606083015260038401546080830152600484015460a083015260058401548316151560c0830152600684015460e08301526007840154908201526008830154909116151561012082015260009061121f90611682565b90508015611231576112318482610b12565b600061124e8360070154846006015461176e90919063ffffffff16565b60045490915061125e908261176e565b6004555050600801805460ff191660011790555050565b60008181526003602052604081205460ff1615806112a9575060008281526003602052604090206008015460ff1615156001145b156112b657506000919050565b600082815260036020818152604092839020835161014081018552815460ff808216151583526001600160a01b0361010092839004169483019490945260018301549582019590955260028201546060820152928101546080840152600481015460a084015260058101548216151560c0840152600681015460e0840152600781015493830193909352600883015416151561012082015261135790611682565b9392505050565b61136661153d565b6001600160a01b0381166113e25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610630565b610b0f8161177a565b61145060405180610140016040528060001515815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081526020016000151581525090565b60408051606085901b6bffffffffffffffffffffffff19166020808301919091526034808301869052835180840390910181526054909201909252805191012061135790610fb3565b60006114a460025490565b82106115185760405162461bcd60e51b815260206004820152602160248201527f546f6b656e56657374696e673a20696e646578206f7574206f6620626f756e6460448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610630565b6002828154811061152b5761152b611c65565b90600052602060002001549050919050565b6000546001600160a01b03163314610dc25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610630565b60006113578284611c7b565b600260015414156115f65760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610630565b6002600155565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905261167d9084906117e2565b505050565b60008061168e60065490565b905082604001518110806116a9575061012083015115156001145b156116b75750600092915050565b608083015160608401516116ca91611597565b81106116e45761010083015160e08401516113579161176e565b60006116fd84606001518361176e90919063ffffffff16565b60a0850151909150600061171183836118c7565b9050600061171f82846118d3565b905060006117488860800151611742848b60e001516118d390919063ffffffff16565b906118c7565b90506117628861010001518261176e90919063ffffffff16565b98975050505050505050565b60006113578284611c4e565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611837826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118df9092919063ffffffff16565b80519091501561167d57808060200190518101906118559190611c93565b61167d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610630565b60006113578284611cb0565b60006113578284611cd2565b60606118ee84846000856118f6565b949350505050565b60608247101561196e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610630565b600080866001600160a01b0316858760405161198a9190611d21565b60006040518083038185875af1925050503d80600081146119c7576040519150601f19603f3d011682016040523d82523d6000602084013e6119cc565b606091505b50915091506119dd878383876119e8565b979650505050505050565b60608315611a54578251611a4d576001600160a01b0385163b611a4d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610630565b50816118ee565b6118ee8383815115611a695781518083602001fd5b8060405162461bcd60e51b81526004016106309190611d3d565b80356001600160a01b0381168114611a9a57600080fd5b919050565b8015158114610b0f57600080fd5b600080600080600080600060e0888a031215611ac857600080fd5b611ad188611a83565b96506020880135955060408801359450606088013593506080880135925060a0880135611afd81611a9f565b8092505060c0880135905092959891949750929550565b600060208284031215611b2657600080fd5b5035919050565b600060208284031215611b3f57600080fd5b61135782611a83565b60008060408385031215611b5b57600080fd5b50508035926020909101359150565b81511515815261014081016020830151611b8f60208401826001600160a01b03169052565b5060408301516040830152606083015160608301526080830151608083015260a083015160a083015260c0830151611bcb60c084018215159052565b5060e083810151908301526101008084015190830152610120928301511515929091019190915290565b60008060408385031215611c0857600080fd5b611c1183611a83565b946020939093013593505050565b600060208284031215611c3157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015611c6057611c60611c38565b500390565b634e487b7160e01b600052603260045260246000fd5b60008219821115611c8e57611c8e611c38565b500190565b600060208284031215611ca557600080fd5b815161135781611a9f565b600082611ccd57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611cec57611cec611c38565b500290565b60005b83811015611d0c578181015183820152602001611cf4565b83811115611d1b576000848401525b50505050565b60008251611d33818460208701611cf1565b9190910192915050565b6020815260008251806020840152611d5c816040850160208701611cf1565b601f01601f1916919091016040019291505056fea264697066735822122054b32df14abf091af7ac3d73489f7a54507c798fe98aaba6dc96be99528f673d64736f6c634300080b0033";

type MockTokenVestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockTokenVestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockTokenVesting__factory extends ContractFactory {
  constructor(...args: MockTokenVestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockTokenVesting> {
    return super.deploy(token_, overrides || {}) as Promise<MockTokenVesting>;
  }
  override getDeployTransaction(
    token_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token_, overrides || {});
  }
  override attach(address: string): MockTokenVesting {
    return super.attach(address) as MockTokenVesting;
  }
  override connect(signer: Signer): MockTokenVesting__factory {
    return super.connect(signer) as MockTokenVesting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockTokenVestingInterface {
    return new utils.Interface(_abi) as MockTokenVestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockTokenVesting {
    return new Contract(address, _abi, signerOrProvider) as MockTokenVesting;
  }
}
